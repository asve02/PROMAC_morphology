---
title: "edgeR_eggNOG"
author: "Dennis Amnebrink"
affiliation-title: "Linnaeus University"
title-block-banner: true
date: now
editor: visual
toc: true
prefer-html: true
number-sections: true
format:
  html:
     code-fold: true
     self-contained: true
---

```{r constants, message=FALSE, warning=FALSE}
SIGNIFICANCE = 0.05
DIFF_TRESHOLD = 2.5
MIN_COUNT = 15
MIN_SAMPLE = 2
```

```{r R_colours}
GEOM_COL_COLOURS = c(
  RColorBrewer::brewer.pal(12, name = 'Paired'))
```

```{r}
#| warning: false
library(tidyverse)
library(data.table)
library(edgeR)
library(kableExtra)
library(viridis)
library(piano)
library(ggbreak)
```

```{r}
#| label: flies
#| cache: true
#| warning: false

#File to connect NGI ID with our own classification ID, add the Âµ-values to this file for testing later, or do that in a sep file?
sample_ID <- read_tsv("../data/J.Pinhassi_21_02_sample_info.txt") %>%
  dplyr::select(1:2) %>%
  dplyr::rename(sample = 1, sample_name = 2) %>%
  mutate(sample_name = str_replace(sample_name, "[0-9]*:","")) %>%
  separate(sample_name, c("treatment","timepoint"), sep = ",") %>%
  mutate(treatment = gsub("NT","TN", treatment)) %>%
  mutate(sample_name = paste(timepoint, treatment, sep = "_")) %>%
  separate(treatment, c("treatment","replicate"), sep = -1) %>%
  mutate(tre_rep = gsub("_","", sample_name)) %>%
  mutate(tre_rep = toupper(tre_rep)) %>%
  mutate(day = case_when( timepoint == "t3" ~ 10,
                          TRUE ~ 17
                          )
         )

target_genes <- read_tsv("../data/list_of_genes.tsv") 

#COG to gene-name file
cognames <- read_tsv("../data/cognames.tsv", col_names = c("eggNOG OGs","cogname"))


#Reading in annotations
eggnogs <- read_tsv("../data/eggnog_annotations.tsv.gz") %>% # Overwriting the Preferred_names with COGs of interest, for a priori list...
  mutate(`eggNOG OGs` = gsub("@...*","",`eggNOG OGs`)) %>%
  mutate(Preferred_name = case_when(
      `eggNOG OGs` %in% target_genes$gene[grepl("COG", target_genes$gene)] ~ `eggNOG OGs`,
      TRUE ~ Preferred_name
  ))



#Reading in taxonomic annotation of reads
taxonomy <- read_tsv("../data/eukulele_phylodb.tsv") %>%
  select(-species) %>%
  rename(species = "genus", genus = "family", family = "order", order = "class", class = "phylum", phylum = "kingdom")
  
#Count file for all orfs, tpm is calculated per sample
bbmap <- fread("../data/bbmap_counts.tsv.gz", sep = "\t") %>%
              filter(count > 0)  %>%                               # removing 0 counts to reduce size of table
              mutate(Geneid = str_replace(Geneid, "[0-9]*_",""),   # Joining in chr and geneid to match format of eggnog naming.
                     orf = paste(Chr,Geneid, sep = "_"),
                     sample = str_extract(sample, "P[0-9]*_[0-9]*")) %>% # Removing extra numbers in sample to match sample_ID format
              dplyr::select(-Geneid,-Chr) %>%
              dplyr::select(orf,Start,End,Strand,Length,sample,count,tpm)

rm_values <- read_tsv("../data/Rm_values.tsv")

gene_categories <- read_tsv("../data/gene_categories.tsv")
```

```{r}
#| warning: false
#Removing non-prokreads as well as recalculating tpm over prok frac.
bbmap_p <- bbmap %>% 
  semi_join(taxonomy %>% filter(domain %in% c("Bacteria", "Archaea")), 
            by = "orf") %>%
  dplyr::select(-tpm) %>%
   group_by(sample) %>%
            mutate(t = count/Length) %>%
            mutate(tpm = t/sum(t)*1e6) %>%
   ungroup()
```

```{r}
#| label: false-positive-filtering
#| warning: false
#Unwanted hits among preferred names that needs to be removed

target_removal <- eggnogs %>%
  filter(Preferred_name == "ccmA" & PFAMs != "Bactofilin") %>% # Removing False Positives
  pull(seed_eggNOG_ortholog)
```

# EdgeR

```{r}
#| label: edgeR
#| cache: true
#| warning: false
design <- model.matrix(~ 0 + factor(c(1,1,1,2,2,2,3,3,3,4,4,4)))
colnames(design) <- c("warm_control","cold_control","cold_nutrient","warm_nutrient")

#Creating DGElist
dgelist <- bbmap_p %>%
  group_by(orf) %>%
  filter(sum(count) >= MIN_COUNT, n() >= MIN_SAMPLE) %>%
  ungroup() %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  inner_join(eggnogs, by = 'orf') %>%
  group_by(seed_eggNOG_ortholog, sample) %>%
  summarise(count = sum(count), .groups = 'drop') %>%
  ungroup() %>%
  pivot_wider(names_from = sample, values_from = count, values_fill = 0) %>%
  as.data.frame() %>%
  tibble::column_to_rownames('seed_eggNOG_ortholog') %>%
  DGEList() %>%
  calcNormFactors() %>%
  estimateDisp(design) %>%
  glmQLFit(design, robust = TRUE)

#Creating contrasts
my.contrasts <- makeContrasts(warm_nutrientvscold_control=warm_nutrient-cold_control, levels=design)

qlf.TNvsC <- glmQLFTest(dgelist, contrast=my.contrasts[,"warm_nutrientvscold_control"])
```

```{r}
#| warning: false
#| cache: true
day17 <- topTags(qlf.TNvsC, n = Inf) %>%
  as.data.frame() %>%
  mutate(day = "17") %>%
  rownames_to_column("seed_eggNOG_ortholog") %>%
  select(-FDR)

edgeR_eggNOGs <- day17 %>%
  mutate(fdr = p.adjust(PValue, method = "fdr")) %>%
  mutate(type = 
           case_when(
             (fdr <= SIGNIFICANCE & logFC >= DIFF_TRESHOLD) ~ "Up",
             (fdr <= SIGNIFICANCE & logFC <= -DIFF_TRESHOLD) ~ "Down",
             TRUE ~"non-DE"
           )) %>%
  mutate(type = forcats::as_factor(type) %>% fct_relevel("Up","non-DE","Down"))

write_tsv(edgeR_eggNOGs, "../results/edgeR_eggNOGs.tsv")
```

## Overview 
A Differential expression analysis was performed on the eggNOG-functional level. This level cluster genes based on similarity, and mitigates the orf-level problem with every orf being taxonomically unique.

EdgeR analysis on day 17 between the C and TN treatment yielded \~ 13000 differentially expressed eggNOGs (@tbl-overview, @fig-edgeOver). Genes with a negative logFC ("Down") are more abundant in the C-treatment, while positive logFC ("Up") denotes higher abundance in the TN-treatment.

```{r}
#| label: tbl-overview
#| warning: false
#| tbl-cap: "EdgeR-output of the significantly Up and Down-regulated genes based on fdr <= 0.05 and logFC of >=2.5 or <= -2.5"

edgeR_eggNOGs <- read_tsv("../results/edgeR_eggNOGs.tsv") %>%
  filter(seed_eggNOG_ortholog != target_removal) #Removing false positives

kable(edgeR_eggNOGs %>%
  group_by(type) %>%
  tally() %>%
  ungroup() %>%
  rename("No. of genes" = "n")) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

```{r}
#| warning: false
#| label: fig-edgeOver
#| fig-cap: Volcano plot of edgeR output. Blue denotes down-regulated genes, i.e more abundant in C-treatment, red denotes genes more highly abundant in the TN-treatment.
#| cache: true
edgeR_eggNOGs %>% 
  ggplot(mapping = aes(x=logCPM, y = logFC, colour=type, size = type)) +
  geom_point()  +
  scale_size_manual(values = c("Down" = 1.5, "Up"=1.5, "non-DE" = 0.3)) +
  scale_colour_manual(values = c("Down" = "Blue","Up" = "Red", "non-DE" = "Black")) +
  theme_minimal() +
  geom_hline(aes(yintercept = DIFF_TRESHOLD), linetype = "dashed", color = "green") +
  geom_hline(aes(yintercept = -DIFF_TRESHOLD), linetype = "dashed", color = "green")
```

```{r}
#| label: tbl-Up
#| tbl-cap: Target genes among the TN-abundant genes, and their classification.
#| warning: false

#Identifying target genes in the positive DE-expressed genes
targetUp <- edgeR_eggNOGs %>%
  filter(type == "Up" & logFC >= 2.5) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>%
  distinct(Preferred_name, sub_category, Category)

kable(targetUp %>% arrange(Preferred_name)) %>%
  scroll_box(width = "500px", height = "400px")
```

A total of `r length(targetUp$Preferred_name)` distinct (not amount of eggnogs) target genes were statistically more abundant TN-treatment genes (@tbl-Up). Categories among the more abundant TN-genes include OMV's, Flagellar motor proteins, Crispr-Cas_system and the restriction-modification categories, matching the trends seen in the TN-treatment by SEM and negative staining (Fig 2 and 5 in MS-document respectively).

```{r}
#| label: tbl-Down
#| tbl-cap: Target genes among the C-abundant genes, and their classification.
#| warning: false

#Identifying target genes in the positive DE-expressed genes
targetDown <- edgeR_eggNOGs %>%
  filter(type == "Down" & logFC <= -2.5) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>%
  distinct(Preferred_name, sub_category, Category)

kable(targetDown %>% arrange(Preferred_name)) %>%
  scroll_box(width = "500px", height = "400px")
```
A total of `r length(targetDown$Preferred_name)` Interestingly enough, several genes in similar categories are seen among the genes more statistically abundant in the C-treatment (@tbl-Down).

## The tpm approach
 
In order to elucidate this better, the number of genes in each category was instead counted for a better comparison (@fig-catComp). It is clear to see that the number of upregulated genes in virus related defense categories are higher in the TN-treatment overall. Categories unique to the TN upregulated genes included "Macromolecular synthesis" and "Lipid transport and metabolism". Perhaps the "Macromolecular synthesis" can explain the extracellular particles?. Interestingly, the upregulated genes reveal a large disparity of expression in mainly four categories elevated in the TN-treatment, the Synthase genes, lipid metabolism and flagellar motor proteins and lastly transcription factors. However, among the genes more upregulated in the C-treatment translation and transcription factors, ATP synthase genes were also the most abundant, possibly reflecting different ATP synthase genes as the comunities are different. The other more abundant category within C-treatment was oxidative stress, followed by osmoregulatory genes, which was overall higher in the C-treatment as compared to the TN-treatment.

```{r}
#| label: fig-catComp
#| fig-cap: DE-gene target gene overview.
#| fig-subcap: 
#|   - "Number of DE-genes in each category and DE."
#|   - "Tpm of each category in respective treatment"
#| warning: false

rbind(
  targetUp %>%
  group_by(sub_category) %>%
  tally() %>%
  ungroup() %>%
  mutate(type = "Up")
  ,
  targetDown %>%
  group_by(sub_category) %>%
  tally() %>%
  ungroup() %>%
  mutate(type = "Down")
) %>%
  ggplot(mapping = aes(x = sub_category, y = n, fill = type)) +
  geom_col(position = "dodge") +
  theme_minimal() +
  theme(axis.text.x = element_text(hjust = 1, angle = 60)) +
  ylab("Number of eggNOGs") +
  xlab("Subcategory")


#Producing the tpm per of up and downregulated genes per treatment

  #Creating legend of geneinformation to join in.
bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf, treatment) %>%
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = 'orf') %>% # Connecting the eggNOGs with orfs
  inner_join( # Adding the up and dowregulated information for plotting purposes
    edgeR_eggNOGs %>%
      filter(fdr <= SIGNIFICANCE & (logFC >= DIFF_TRESHOLD | logFC <= -DIFF_TRESHOLD))
  ) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name), by = "seed_eggNOG_ortholog") %>% # adding annotation
  inner_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>% # adding sub_categories
  group_by(type, treatment, sub_category) %>% # Summarising tpm per sub-category and treatment for up/down-reg genes
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  ggplot(mapping = aes(x =sub_category, y = tpm, fill = type)) +
  geom_col(position = "dodge") +
  facet_wrap(~ treatment) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  xlab("Subcategory")
```

These graphs led to the question of whether the contribution was equal among the genes in each category, to this end the genes were plotted individually to identify key-genes in the various categories (@fig-targetGeneTpm). We can see that the ATPases have a larger contribution across all genes in the TN-treatment, but are still quite abundant in the C-treatment. (There is an abstraction here, the eggNOGs which are tested are summarised under the gene-names I.e the atpA for example, can have both up and downregulated eggNOGs within it, explaining why the "down" is lower in the C-treatment). Interestingly, there are two genes in the Crispr-Cas that are detected, and are detected in one treatment each, while the Type_1\_restriction-modification shows one shared genes, and two genes only detected in the TN-treatment. Only the Osmoregulatory category was higher in the C-treatment, and this is explained mainly by the proX-gene (this gene is involved in glyceine/betaine/proline osmoregulation, also known to be higher in cold strains (Raymond-Bouchard et al. 2018))

```{r}
#| label: fig-targetGeneTpm
#| fig-cap: Gene tpm-contribution to the various categories.
#| warning: false
bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf, treatment) %>%
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = 'orf') %>% # Connecting the eggNOGs with orfs
  inner_join( # Adding the up and dowregulated information for plotting purposes
    edgeR_eggNOGs %>%
      filter(fdr <= SIGNIFICANCE & (logFC >= DIFF_TRESHOLD | logFC <= -DIFF_TRESHOLD))
  ) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name), by = "seed_eggNOG_ortholog") %>% # adding annotation
  inner_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>% # adding sub_categories
  group_by(type, treatment, Preferred_name) %>% # Summarising tpm per gene-name and treatment for up/down-reg genes
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  inner_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>% #Joining in the category information
  ggplot(mapping = aes(x = Preferred_name, y = tpm, fill = type)) +
  geom_col(position = "dodge") +
  facet_wrap(~ sub_category, scales = "free") +
  theme_minimal() +
  theme(axis.text.x = element_text(hjust = 1, angle = 60))
```

```{r}
#| include: false
#| eval: false
#| label: pheatmap_vis
#| warning: false
#Extract the top20 annotated DE-genes from each treatment and plot them in a pheatmap.
top20trt <-bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>%
  group_by(orf, treatment) %>%
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(eggnogs %>% filter(Preferred_name != "-") %>% distinct(orf, seed_eggNOG_ortholog, Preferred_name), by = 'orf') %>% #Removing unannotated eggogs!
  group_by(treatment, seed_eggNOG_ortholog) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  inner_join( # Adding the up and dowregulated information for selecting the DE genes
    edgeR_eggNOGs %>%
      filter(fdr <= SIGNIFICANCE & (logFC >= DIFF_TRESHOLD | logFC <= -DIFF_TRESHOLD))
  ) %>%
  group_by(treatment) %>%
  arrange(desc(tpm)) %>%
  slice(1:20) %>%
  ungroup() %>%
  pull(seed_eggNOG_ortholog)
  
edgeR_pheatmap <- bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = 'orf') %>% # Connecting the eggNOGs with orfs
  filter(seed_eggNOG_ortholog %in% top20trt) %>%
  inner_join( # Adding the up and dowregulated information for plotting purposes
    edgeR_eggNOGs %>%
      filter(fdr <= SIGNIFICANCE & (logFC >= DIFF_TRESHOLD | logFC <= -DIFF_TRESHOLD))
  ) %>%
  group_by(sample, seed_eggNOG_ortholog) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  pivot_wider(values_from = tpm, names_from = sample, values_fill = 0 ) %>%
  column_to_rownames("seed_eggNOG_ortholog") %>%
  as.matrix()

  inner_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>% # adding sub_categories
  group_by(type, treatment, Preferred_name) %>% # Summarising tpm per gene-name and treatment for up/down-reg genes
  summarise(tpm = sum(tpm)) %>%
  ungroup()
  
  #Add gene-information annotation such as gene-name and pathway
  
  anno_row <- edgeR_pheatmap %>% 
    as.data.frame() %>%
    rownames_to_column("seed_eggNOG_ortholog") %>%
    inner_join(
      edgeR_eggNOGs %>%
      filter(fdr <= SIGNIFICANCE & (logFC >= DIFF_TRESHOLD | logFC <= -DIFF_TRESHOLD)) %>%
        distinct(seed_eggNOG_ortholog, type), by = "seed_eggNOG_ortholog"
  )  %>%
    inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name), by = "seed_eggNOG_ortholog") %>%
    select(seed_eggNOG_ortholog, Preferred_name) %>%
    left_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>%
    select(-Category) %>%
    column_to_rownames("seed_eggNOG_ortholog")
  
  pheatmap(edgeR_pheatmap, scale = "row", annotation_row = anno_row)
  
  #make a pheatmap of the target genes instead, and look at their expression explicitly
  
top20trt <-bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>%
  group_by(orf, treatment) %>%
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(eggnogs %>% filter(Preferred_name != "-") %>% distinct(orf, seed_eggNOG_ortholog, Preferred_name), by = 'orf') %>% #Removing unannotated eggogs!
  group_by(treatment, seed_eggNOG_ortholog) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  inner_join( # Adding the up and dowregulated information for selecting the DE genes
    edgeR_eggNOGs %>%
      filter(fdr <= SIGNIFICANCE & (logFC >= DIFF_TRESHOLD | logFC <= -DIFF_TRESHOLD)) %>%
      distinct(seed_eggNOG_ortholog, type) , by = "seed_eggNOG_ortholog"
  ) %>%
    inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>%
    group_by(type) %>%
  arrange(desc(tpm)) %>%
  slice(1:50) %>%
  ungroup() %>%
  pull(seed_eggNOG_ortholog)

edgeR_pheatmap <- bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>%
  inner_join(eggnogs, by = "orf") %>%
  group_by(sample, seed_eggNOG_ortholog) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  filter(seed_eggNOG_ortholog %in% c(top20trt)) %>%
  pivot_wider(values_from = tpm, names_from = sample, values_fill = 0 ) %>%
  column_to_rownames("seed_eggNOG_ortholog") %>%
  as.matrix()

#Adding annotation based on pathways
  ann_row <- edgeR_pheatmap %>%
    as.data.frame() %>%
    rownames_to_column("seed_eggNOG_ortholog") %>%
    inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name)) %>%
    inner_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>%
    select(seed_eggNOG_ortholog, sub_category) %>% #Taxonomy doesn't work due to non-fidelity of eggNOGs
    column_to_rownames("seed_eggNOG_ortholog") 
  
  #Creating vector with correct gene names
  names_row <- edgeR_pheatmap %>%
    as.data.frame() %>%
    rownames_to_column("seed_eggNOG_ortholog") %>%
    inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name)) %>%
    pull(Preferred_name)
  
  #Treatment annotation
  
  pheatmap(edgeR_pheatmap, cluster_cols = F, labels_row = names_row, scale = "row", annotation_row = ann_row)
```

## The CPM approach
Another way to visualizer the target genes and their different expression was to create a weighted factor defined as logCPM*logFC (abundant multiplied by change) to get a fair estimate of their role in the different treatments. This was select for both the most negative and positive values and plotted (@fig-weighted). Note that there is an abundance of transcription elongation factors in the TN-treatment, while it appears to be the same in the C-treatment. Then perhaps the differential expression is then explained by different taxonomies...

```{r}
#| label: fig-weighted
#| warning: false


target_gene_plot_df <- edgeR_eggNOGs %>%
  filter(fdr <= SIGNIFICANCE & (logFC >= DIFF_TRESHOLD | logFC <= -DIFF_TRESHOLD)) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = gene), by = "Preferred_name") %>%
    mutate(seed_eggNOG_ortholog = forcats::as_factor(seed_eggNOG_ortholog) %>% fct_reorder(logFC, .desc = TRUE))

#Filter out top 25 logFC target eggNOGs in the upper and lower logFC ranges for interpretation

cog_vec <- cognames$`eggNOG OGs`

xvec <- target_gene_plot_df %>%
  mutate(weight = logFC*logCPM) %>%
  arrange(desc(weight)) %>%
  slice(1:25, (nrow(.)-24):nrow(.)) %>% 
  left_join(cognames %>% rename(Preferred_name = "eggNOG OGs"), by ="Preferred_name") %>%
  mutate(Preferred_name = case_when(Preferred_name %in% cog_vec ~ paste0(cogname),
                                    TRUE ~ Preferred_name)) %>%
  pull(Preferred_name)



target_gene_plot_df %>%
  mutate(weight = logFC*logCPM) %>%
  arrange(desc(weight)) %>%
  slice(1:25, (nrow(.)-24):nrow(.)) %>% #selecting largest and lowest logFC lavues respectively
  ggplot(mapping = aes(y = seed_eggNOG_ortholog, x= logFC)) +
  geom_point(aes(size = logCPM, colour = fdr)) +
  scale_colour_viridis(discrete = FALSE) +
  theme_minimal() +
  scale_x_break(breaks = c(-4, 5.7)) +
  theme(axis.text.y = element_text("")) +
  scale_y_discrete(labels =xvec) +
  
  ggtitle("Differentially expressed eggNOGs summarised under pref name") 
 #The same orthologs by with class_information added.
```

Here we summarise the taxonomic groups responsible for the DE genes, positive and negative (@fig-targetGeneTax), firstly for the entire DE-analysis, and follow-up on the target gene specifically. There is a notable difference in the fact that many of the target genes appears to not be either present or Differentially abundant in the archaea. The 25 most abundant taxa, respectively, was selected. Note here that the number of eggNOGs are dupllicated due to taxonomic infidelity. The values here are inflated, and perhaps this is not the right way to show this, this should probably be done with the tpm instead... Discuss this!

```{r}
#| label: fig-targetGeneTax
#| fig-cap: Taxnomic expression of DE-genes.
#| fig-subcap: 
#|    - "Whole community"
#|    - "Target genes"
#| warning: false

#Eggnogs DE


#Getting top 25
top25<- edgeR_eggNOGs %>%
  filter(type %in% c("Down","Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, by = "seed_eggNOG_ortholog")) %>%
  inner_join(taxonomy, by = "orf") %>%
  group_by(order, type) %>%
  summarise(logCPM = sum(logCPM)) %>%
  ungroup() %>%
  distinct(order, logCPM) %>%
  arrange(desc(logCPM)) %>%
  filter(!is.na(order)) %>%
  slice(1:25) %>%
  pull(order)

#Whole community
edgeR_eggNOGs %>%
  filter(type %in% c("Down","Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, by = "seed_eggNOG_ortholog")) %>%
  inner_join(taxonomy, by = "orf") %>%
  filter(order %in% top25) %>%
  group_by(order, type) %>%
  summarise(logCPM = sum(logCPM)) %>%
  ungroup() %>%
  mutate(order = forcats::as_factor(order) %>% fct_reorder(logCPM, .desc = TRUE)) %>%
  ggplot(mapping = aes(x = order, y = logCPM)) +
  geom_col() +
  facet_wrap(~ type) +
  theme_minimal() +
  theme(axis.text.x = element_text(hjust = 1, angle = 90))

#Target genes

  #Specifying new top25 for target gene universe
top25 <- edgeR_eggNOGs %>%
  filter(type %in% c("Down","Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "seed_eggNOG_ortholog") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,Preferred_name), by = "seed_eggNOG_ortholog") %>%
  semi_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>% #Target gene universe
  inner_join(taxonomy, by = "orf") %>%
  group_by(order, type) %>%
  summarise(logCPM = sum(logCPM)) %>%
  ungroup() %>%
  distinct(order, logCPM) %>%
  arrange(desc(logCPM)) %>%
  slice(1:25) %>%
  pull(order)

edgeR_eggNOGs %>%
  filter(type %in% c("Down","Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "seed_eggNOG_ortholog") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,Preferred_name), by = "seed_eggNOG_ortholog") %>%
  semi_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>% #Target gene universe
  inner_join(taxonomy, by = "orf") %>%
  filter(order %in% top25) %>%
  group_by(order, type) %>%
  summarise(logCPM = sum(logCPM)) %>%
  ungroup() %>%
  mutate(order = forcats::as_factor(order) %>% fct_reorder(logCPM)) %>%
  ggplot(mapping = aes(x = order, y = logCPM)) +
  geom_col() +
  facet_wrap(~ type) +
  theme_minimal() +
  theme(axis.text.x = element_text(hjust = 1, angle = 90)) +
  coord_flip()
```
Following this we looked at the amount of genes expresses in the manually defined categories (@fig-manCatsTax). Here we see a differential taxonomic contribution to the different categories, and among the categories, it is worth to note that DNA replication and repair is higher in the C-treatment. While the TN-treatment instead has a higher expression of flagellar motor proteins, cell shape and lipid transport and metabolism. A large difference in taxonomy is noted in translation and transcription factors as well as ATP synthase genes, suggesting different actively growing players. Last notes are the SAR11-clade contribution to several categories in the C-treatment, and a significant contribution of gammaproteobacteria to osmoregulatory genes.
```{r fig.width=12}
#| label: fig-manCatsTax
#| warning: false
#| fig-cap: "The summarised logCPM of DE-genes in the list of target genes, separated by up and down regulation, down means more abundant in the C treatment while up refers to more abundant in the TN treatment."
#| fig-subcap: 
#|     - "logCPM of target eggNOGs"
#|     - "Taxonomy of eggNOGs in each category"
#|     - "Relative taxonomic contribution to each category"

#Plotting categories without taxonomy
edgeR_eggNOGs %>%
  filter(type %in% c("Down","Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "seed_eggNOG_ortholog") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>% #Target gene universe
  distinct(seed_eggNOG_ortholog, sub_category, logCPM, type) %>% #Getting rid of dupicates due to joining in with orfs 
  group_by(sub_category, type) %>%
  summarise(logCPM = sum(logCPM)) %>%
  ungroup() %>%
  mutate(sub_category = forcats::as_factor(sub_category) %>% fct_reorder(logCPM)) %>%
  ggplot(mapping = aes(x = sub_category, y = logCPM)) +
  geom_col() +
  facet_wrap(~ type) +
  theme_minimal() +
  theme(axis.text.x = element_text(hjust = 1, angle = 90)) +
 # scale_fill_manual('Order', values = GEOM_COL_COLOURS1) +
  coord_flip() +
  xlab("Category")


#Selecting top12 categories for order
#Specifying new top25 for target gene universe
top12 <- edgeR_eggNOGs %>%
  filter(type %in% c("Down","Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "seed_eggNOG_ortholog") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,Preferred_name), by = "seed_eggNOG_ortholog") %>%
  semi_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>% #Target gene universe
  inner_join(taxonomy, by = "orf") %>%
  group_by(order, type) %>%
  summarise(logCPM = sum(logCPM)) %>%
  ungroup() %>%
  distinct(order,logCPM) %>%
  arrange(desc(logCPM)) %>%
  slice(1:16) %>%
  distinct(order) %>%
  pull(order)

GEOM_COL_COLOURS1 = c(GEOM_COL_COLOURS, "#D3D3D3")

#The logCPM of the seeds are duplicated due to several orfs.. But that duplication is perhaps fine... it is not! Do a tally of taxonomy for each DE gene and taxonomy instead and present it as a relative abundance plot in conjunction with this.
edgeR_eggNOGs %>%
  filter(type %in% c("Down","Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "seed_eggNOG_ortholog") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>% #Target gene universe
  inner_join(taxonomy, by = "orf") %>%
  mutate(order = ifelse(order %in% top12, paste0(order), paste0("Other"))) %>%
  group_by(sub_category, type, order) %>%
  tally() %>%
  ungroup() %>%
  group_by(type, sub_category) %>% # Relative abundance defined by type and category
  mutate(relab = n/sum(n)) %>%
  ungroup() %>%
  #mutate(sub_category = forcats::as_factor(sub_category) %>% fct_reorder(logCPM)) %>%
  ggplot(mapping = aes(x = sub_category, y = n, fill = order)) +
  geom_col() +
  facet_wrap(~ type) +
  theme_minimal() +
  theme(axis.text.x = element_text(hjust = 1, angle = 90)) +
  scale_fill_manual('Order', values = GEOM_COL_COLOURS1) +
  coord_flip() +
  xlab("Category")

edgeR_eggNOGs %>%
  filter(type %in% c("Down","Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "seed_eggNOG_ortholog") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>% #Target gene universe
  inner_join(taxonomy, by = "orf") %>%
  mutate(order = ifelse(order %in% top12, paste0(order), paste0("Other"))) %>%
  group_by(sub_category, type, order) %>%
  tally() %>%
  ungroup() %>%
  group_by(type, sub_category) %>% # Relative abundance defined by type and category
  mutate(relab = n/sum(n)) %>%
  ungroup() %>%
  #mutate(sub_category = forcats::as_factor(sub_category) %>% fct_reorder(logCPM)) %>%
  ggplot(mapping = aes(x = sub_category, y = relab, fill = order)) +
  geom_col() +
  facet_wrap(~ type) +
  theme_minimal() +
  theme(axis.text.x = element_text(hjust = 1, angle = 90)) +
  scale_fill_manual('Order', values = GEOM_COL_COLOURS1) +
  coord_flip() +
  xlab("Category")
```


# Overrepresentation of manually created categories.
Lastly, it is of interest to see if any of these gene categories are over-represented in any of the treatments, thus a Fisher's test of over-representation was conducted on differentially abundant eggNOGs to identify potential treatment-pathway fidelity. However this test needs verification, to see if it is possible to use manual categories.
```{r}
#| label: tbl-fisher
#| tbl-cap: "List of categories and their adjusted-Pvalues, significance means overrepresentation"
#| warning: false

#The tutorial tells me to have the probeID (eggnogs) as rownames

#Upregulated genes
upGenes <- edgeR_eggNOGs %>%
  filter(type %in% c("Up")) %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "seed_eggNOG_ortholog") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>%
  distinct(seed_eggNOG_ortholog) %>% #removing duplicates due to the orf-joining
  pull(seed_eggNOG_ortholog)
  
  
#Creating annotation (all genes in the genelist)
geneListAnno <- eggnogs %>%
  left_join(
    edgeR_eggNOGs %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "seed_eggNOG_ortholog") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,Preferred_name), by = "seed_eggNOG_ortholog") %>%
  inner_join(target_genes %>% rename(Preferred_name = "gene"), by = "Preferred_name") %>%
  distinct(seed_eggNOG_ortholog, sub_category),
  by = "seed_eggNOG_ortholog") %>%
  distinct(seed_eggNOG_ortholog, sub_category) #There is a lot of NA's here, which are discarded by the analysis
  
#Converting it to the required format by piano. Important that gene names match those in the DE-DF.
upGSC <- loadGSC(geneListAnno)

#Total number of genes
geneVerse <- eggnogs %>%
  distinct(seed_eggNOG_ortholog) %>%
  pull(seed_eggNOG_ortholog)

#run the hypergeometric test, genes argument should be vector, 
res <- runGSAhyper(genes=upGenes, universe=geneVerse, gsc=upGSC, gsSizeLim=c(3, 100))

# A table of the modules with lowest p-val
res_table <- res$resTab[order(res$pvalues), ]  # sort by p-value
knitr::kable(res_table[1:10, ])
```
